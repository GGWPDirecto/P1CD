pipeline {
    agent any

    environment {
        PATH = "/home/ubuntu/.local/bin:${env.PATH}"
    }

    stages {
        stage('Get Code') {
            steps {
                git branch: 'master', credentialsId: 'GitHub', url: 'https://github.com/GGWPDirecto/P1CD.git'
            }
        }

        stage('Deploy') {
            steps {
                script {
                    sh '''
                    sam build
                    sam validate --region us-east-1
                    sam deploy --no-confirm-changeset --no-fail-on-empty-changeset \
                      --stack-name p1cd-stack-prod \
                      --capabilities CAPABILITY_IAM \
                      --s3-bucket p1cd-deploy-bucket-carlos \
                      --region us-east-1 \
                      --parameter-overrides Env=production
                    '''
                    def apiUrl = sh(
                        script: "aws cloudformation describe-stacks --stack-name p1cd-stack-prod --region us-east-1 --query 'Stacks[0].Outputs[?OutputKey==`BaseUrlApi`].OutputValue' --output text",
                        returnStdout: true
                    ).trim()

                    if (!apiUrl) {
                        error "API_GATEWAY_URL no est√° definida. Revisa el despliegue o la consulta a CloudFormation."
                    }

                    env.API_GATEWAY_URL = apiUrl
                    echo "API Gateway URL para Production: ${env.API_GATEWAY_URL}"
                }
            }
        }

        stage('Rest Test') {
            steps {
                script {
                    echo "Ejecutando pruebas de solo lectura contra: ${env.API_GATEWAY_URL}"
                    sh "BASE_URL=${env.API_GATEWAY_URL} python3 -m pytest -m readonly --junitxml=report.xml test/integration/todoApiTest.py || true"
                }
            }
            post {
                always {
                    junit testResults: 'report.xml', allowEmptyResults: true
                }
            }
        }
    }
}
